<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>骏马金龙</title>
  
  <subtitle>我本问道人，道心不坚，必将与道无缘！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.junmajinlong.com/"/>
  <updated>2019-07-06T15:30:20.499Z</updated>
  <id>http://www.junmajinlong.com/</id>
  
  <author>
    <name>骏马金龙</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>总结关于CPU的一些基本知识</title>
    <link href="http://www.junmajinlong.com/os/cpu/"/>
    <id>http://www.junmajinlong.com/os/cpu/</id>
    <published>2019-07-06T10:20:41.000Z</published>
    <updated>2019-07-06T15:30:20.499Z</updated>
    
    <content type="html"><![CDATA[<h3 id="关于CPU和程序的执行"><a href="#关于CPU和程序的执行" class="headerlink" title="关于CPU和程序的执行"></a>关于CPU和程序的执行</h3><p>CPU是计算机的大脑。</p><ol><li><p><strong>程序的运行过程，实际上是程序涉及到的、未涉及到的一大堆的指令的执行过程</strong>。   当程序要执行的部分被装载到内存后，CPU要从内存中取出指令，然后指令解码(以便知道类型和操作数，简单的理解为CPU要知道这是什么指令)，然后执行该指令。再然后取下一个指令、解码、执行，以此类推直到程序退出。</p></li><li><p>这个<strong>取指、解码、执行</strong>三个过程构成一个CPU的基本周期。</p></li><li><p>每个CPU都有一套自己可以执行的专门的<strong>指令集</strong>(注意，这部分指令是CPU提供的，CPU-Z软件可查看)。<br> 正是因为不同CPU架构的指令集不同，使得x86处理器不能执行ARM程序，ARM程序也不能执行x86程序。<br> <strong>注：指令集的软硬件层次之分</strong>：硬件指令集是硬件层次上由CPU自身提供的可执行的指令集合。软件指令集是指语言程序库所提供的指令，只要安装了该语言的程序库，指令就可以执行。</p></li><li><p>由于CPU访问内存以得到指令或数据的时间要比执行指令花费的时间长很多，因此在CPU内部提供了一些<strong>用来保存关键变量、临时数据等信息的通用寄存器</strong>。   所以，CPU需要提供一些特定的指令，使得可以从内存中读取数据存入寄存器以及可以将寄存器数据存入内存。</p></li><li><p>除了通用寄存器，还有一些特殊的寄存器。典型的如：  </p><ul><li>PC：program counter，表示程序计数器，它<strong>保存了将要取出的下一条指令的内存地址，指令取出后，就会更新该寄存器指向下一条指令</strong>。  </li><li>堆栈指针：指向内存当前栈的顶端，包含了每个函数执行过程的栈帧，该栈帧中保存了该函数相关的输入参数、局部变量、以及一些没有保存在寄存器中的临时变量。  </li><li>PSW：program status word，表示程序状态字，这个寄存器内保存了一些控制位，比如<strong>CPU的优先级、CPU的工作模式(用户态还是内核态模式)</strong>等。  </li></ul></li><li><p>在CPU进行进程切换的时候，<strong>需要将寄存器中和当前进程有关的状态数据写入内存对应的位置(内核中该进程的栈空间)保存起来，当切换回该进程时，需要从内存中拷贝回寄存器中</strong>。即上下文切换时，需要保护现场和恢复现场。  </p></li><li><p>为了改善性能，CPU已经不是单条<code>取指--&gt;解码--&gt;执行</code>的路线，而是分别为这3个过程分别提供独立的取值单元，解码单元以及执行单元。这样就形成了流水线模式。<br>例如，流水线的最后一个单元——执行单元正在执行第n条指令，而前一个单元可以对第n+1条指令进行解码，再前一个单元即取指单元可以去读取第n+2条指令。这是三阶段的流水线，还可能会有更长的流水线模式。  </p></li><li><p>更优化的CPU架构是superscalar架构（超标量架构）。这种架构将取指、解码、执行单元分开，有大量的执行单元，然后每个取指+解码的部分都以并行的方式运行。比如有2个取指+解码的并行工作线路，每个工作线路都将解码后的指令放入一个缓存缓冲区等待执行单元去取出执行。<br><img src="/img/os/733013-20190706104851579-9893174.png" alt>  </p></li><li><p>除了嵌入式系统，多数CPU都有两种工作模式：内核态和用户态。这两种工作模式是由PSW寄存器上的一个二进制位来控制的。</p></li><li><p>内核态的CPU，可以执行指令集中的所有指令，并使用硬件的所有功能。</p></li><li><p>用户态的CPU，只允许执行指令集中的部分指令。一般而言，IO相关和把内存保护相关的所有执行在用户态下都是被禁止的，此外其它一些特权指令也是被禁止的，比如用户态下不能将PSW的模式设置控制位设置成内核态。  </p></li><li><p>用户态CPU想要执行特权操作，需要发起系统调用来请求内核帮忙完成对应的操作。其实是在发起系统调用后，CPU会执行trap指令陷入(trap)到内核。当特权操作完成后，需要执行一个指令让CPU返回到用户态。</p></li><li><p>除了系统调用会陷入内核，更多的是硬件会引起trap行为陷入内核，使得CPU控制权可以回到操作系统，以便操作系统去决定如何处理硬件异常。  </p></li></ol><p><img src="/img/os/733013-20190415112057188-972052680.png" alt></p><h3 id="关于CPU的多核和多线程"><a href="#关于CPU的多核和多线程" class="headerlink" title="关于CPU的多核和多线程"></a>关于CPU的多核和多线程</h3><ol><li>CPU的物理个数由主板上的插槽数量决定，每个CPU可以有多核心，每核心可能会有多线程。</li><li><strong>多核CPU的每核(每核都是一个小芯片)，在OS看来都是一个独立的CPU</strong>。</li><li><strong>对于超线程CPU来说，每核CPU可以有多个线程(数量是两个，比如1核双线程，2核4线程，4核8线程)，每个线程都是一个虚拟的逻辑CPU(比如windows下是以逻辑处理器的名称称呼的)，而每个线程在OS看来也是独立的CPU</strong>。   这是欺骗操作系统的行为，在物理上仍然只有1核，只不过在超线程CPU的角度上看，它认为它的超线程会加速程序的运行。<br> <img src="/img/os/733013-20190706104845832-630323371.png" alt>  </li><li>要发挥超线程优势，需要操作系统对超线程有专门的优化。</li><li>多线程的CPU在能力上，比非多线程的CPU核心要更强，但每个线程不足以与独立的CPU核心能力相比较。  </li><li><strong>每核上的多线程CPU都共享该核的CPU资源</strong>。   例如，假设每核CPU都只有一个”发动机”资源，那么线程1这个虚拟CPU使用了这个”发动机”后，线程2就没法使用，只能等待。<br> 所以，超线程技术的主要目的是为了增加流水线(参见前文对流水线的解释)上更多个独立的指令，这样线程1和线程2在流水线上就尽量不会争抢该核CPU资源。所以，超线程技术利用了superscalar(超标量)架构的优点。  </li><li><strong>多线程意味着每核可以有多个线程的状态</strong>。比如某核的线程1空闲，线程2运行。</li><li><strong>多线程没有提供真正意义上的并行处理，每核CPU在某一时刻仍然只能运行一个进程，因为线程1和线程2是共享某核CPU资源的。可以简单的认为每核CPU在独立执行进程的能力上，有一个资源是唯一的，线程1获取了该资源，线程2就没法获取</strong>。   但是，线程1和线程2在很多方面上是可以并行执行的。比如可以并行取指、并行解码、并行执行指令等。所以虽然单核在同一时间只能执行一个进程，但线程1和线程2可以互相帮助，加速进程的执行。<br> 并且，如果线程1在某一时刻获取了该核执行进程的能力，假设此刻该进程发出了IO请求，于是线程1掌握的执行进程的能力，就可以被线程2获取，即切换到线程2。这是在执行线程间的切换，是非常轻量级的。(WIKI: if resources for one process are not available, then another process can continue if its resources are available)  </li><li>多线程可能会出现一种现象：假如2核4线程CPU，有两个进程要被调度，那么只有两个线程会处于运行状态，如果这两个线程是在同一核上，则另一核完全空转，处于浪费状态。更期望的结果是每核上都有一个CPU分别调度这两个进程。</li></ol><p><img src="/img/os/733013-20190415112057188-972052680.png" alt></p><h3 id="CPU上的高速缓存"><a href="#CPU上的高速缓存" class="headerlink" title="CPU上的高速缓存"></a>CPU上的高速缓存</h3><ol><li><strong>最高速的缓存是CPU的寄存器</strong>，它们和CPU的材料相同，最靠近CPU或最接近CPU，访问它们没有时延(&lt;1ns)。但容量很小，小于1kb。  <ul><li>32bit：32*32比特=128字节  </li><li>64bit：64*64比特=512字节  </li></ul></li><li>寄存器之下，是CPU的高速缓存。分为L1缓存、L2缓存、L3缓存，每层速度按数量级递减、容量也越来越大。<br><img src="/img/os/733013-20190706104839954-1191269220.png" alt>  </li><li><strong>每核心都有一个自己的L1缓存。L1缓存分两种：L1指令缓存(L1-icache)和L1数据缓存(L1-dcache)</strong>。L1指令缓存用来存放已解码指令，L1数据缓存用来放访问非常频繁的数据。</li><li>L2缓存用来存放近期使用过的内存数据。更严格地说，存放的是很可能将来会被CPU使用的数据。</li><li><strong>Intel的CPU是多核共享L2缓存</strong>。</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;关于CPU和程序的执行&quot;&gt;&lt;a href=&quot;#关于CPU和程序的执行&quot; class=&quot;headerlink&quot; title=&quot;关于CPU和程序的执行&quot;&gt;&lt;/a&gt;关于CPU和程序的执行&lt;/h3&gt;&lt;p&gt;CPU是计算机的大脑。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;stron
      
    
    </summary>
    
      <category term="OS" scheme="http://www.junmajinlong.com/categories/OS/"/>
    
    
      <category term="OS" scheme="http://www.junmajinlong.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>编程通用系列文章</title>
    <link href="http://www.junmajinlong.com/coding/index/"/>
    <id>http://www.junmajinlong.com/coding/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T16:51:37.729Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="编程通用" scheme="http://www.junmajinlong.com/categories/%E7%BC%96%E7%A8%8B%E9%80%9A%E7%94%A8/"/>
    
    
      <category term="编程通用" scheme="http://www.junmajinlong.com/tags/%E7%BC%96%E7%A8%8B%E9%80%9A%E7%94%A8/"/>
    
  </entry>
  
  <entry>
    <title>Golang系列文章</title>
    <link href="http://www.junmajinlong.com/golang/index/"/>
    <id>http://www.junmajinlong.com/golang/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:14:18.644Z</updated>
    
    <content type="html"><![CDATA[<p>这个系列写的不是很好，未来重构。</p><h1 id="Go-基础系列"><a href="#Go-基础系列" class="headerlink" title="Go 基础系列"></a>Go 基础系列</h1><table><thead><tr><th>Go 基础</th><th>Go 基础</th></tr></thead><tbody><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9832577.html" target="_blank" rel="noopener">1.Go 简介</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9834459.html" target="_blank" rel="noopener">2.Go 数据结构 struct</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9843068.html" target="_blank" rel="noopener">3. 构建 Go 程序</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9847554.html" target="_blank" rel="noopener">4.import 导包和初始化阶段</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9852396.html" target="_blank" rel="noopener">5.array</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9854932.html" target="_blank" rel="noopener">6.Slice 详解</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9857668.html" target="_blank" rel="noopener">7.map</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9863108.html" target="_blank" rel="noopener">8. 常量和变量</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9863563.html" target="_blank" rel="noopener">9. 简单数据类型</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9863915.html" target="_blank" rel="noopener">10. 数据类型转换 (strconv 包)</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9866091.html" target="_blank" rel="noopener">11. 流程控制结构</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9876203.html" target="_blank" rel="noopener">12. 函数 (1)</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9879198.html" target="_blank" rel="noopener">13.defer、panic 和 recover</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9878898.html" target="_blank" rel="noopener">14. 函数 (2)：回调函数和闭包</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9882315.html" target="_blank" rel="noopener">15.struct 和嵌套 struct</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9890624.html" target="_blank" rel="noopener">16.Go 中的方法</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9887233.html" target="_blank" rel="noopener">17.struct 的导出和暴露问题</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9940845.html" target="_blank" rel="noopener">18.Go 接口</a></td></tr><tr><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9941402.html" target="_blank" rel="noopener">19.Go 空接口</a></td><td><a href="https://www.cnblogs.com/f-ck-need-u/p/9893347.html" target="_blank" rel="noopener">20.Go 接口类型断言和 type-switch</a></td></tr></tbody></table><h1 id="IO、文件类操作"><a href="#IO、文件类操作" class="headerlink" title="IO、文件类操作"></a>IO、文件类操作</h1><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9944229.html" target="_blank" rel="noopener">1. 读取标准输入</a>  </li></ul><h1 id="Go-并发"><a href="#Go-并发" class="headerlink" title="Go 并发"></a>Go 并发</h1><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10004787.html" target="_blank" rel="noopener">WaitGroup 用法说明</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9986335.html" target="_blank" rel="noopener">channel 入门</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9994512.html" target="_blank" rel="noopener">为 select 设置超时时间</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9994508.html" target="_blank" rel="noopener">nil channel 用法示例</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9994496.html" target="_blank" rel="noopener">双层 channel 用法示例</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9994652.html" target="_blank" rel="noopener">指定 goroutine 的执行顺序</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9998729.html" target="_blank" rel="noopener">Go 互斥锁 Mutex 和读写锁 RWMutex 的用法详述</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10004620.html" target="_blank" rel="noopener">Go 实现工作池 (线程池) 的两种方式</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10009892.html" target="_blank" rel="noopener">Go 惰性数值生成器</a>  </li></ul><h1 id="Web-编程"><a href="#Web-编程" class="headerlink" title="Web 编程"></a>Web 编程</h1><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10020951.html" target="_blank" rel="noopener">1.Handler</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10020927.html" target="_blank" rel="noopener">2.URLs</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10020942.html" target="_blank" rel="noopener">3.Go 自带的 ServeMux multiplexer</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10020917.html" target="_blank" rel="noopener">4.HttpRouter 路由</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10035801.html" target="_blank" rel="noopener">5.处理请求</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10035803.html" target="_blank" rel="noopener">6.Cookie</a>  </li><li><a href="#blog1543740847">7.template(见下方标准库)</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10054073.html" target="_blank" rel="noopener">8.数据存储 (1)：内存存储</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10060242.html" target="_blank" rel="noopener">9.数据存储 (2)：CSV 文件存储</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10060245.html" target="_blank" rel="noopener">10.数据存储 (3)：序列化存储 gob</a>  </li></ul><p><a name="blog1543740847"></a></p><h1 id="标准库、第三方库"><a href="#标准库、第三方库" class="headerlink" title="标准库、第三方库"></a>标准库、第三方库</h1><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10035768.html" target="_blank" rel="noopener">1.Go template 深入剖析</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10053124.html" target="_blank" rel="noopener">2.Go template 语法、用法详解</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10080793.html" target="_blank" rel="noopener">3.Go json 用法详解</a>  </li><li>4.Go json：simplejson 用法  </li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这个系列写的不是很好，未来重构。&lt;/p&gt;
&lt;h1 id=&quot;Go-基础系列&quot;&gt;&lt;a href=&quot;#Go-基础系列&quot; class=&quot;headerlink&quot; title=&quot;Go 基础系列&quot;&gt;&lt;/a&gt;Go 基础系列&lt;/h1&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Go 基
      
    
    </summary>
    
      <category term="Golang" scheme="http://www.junmajinlong.com/categories/Golang/"/>
    
    
      <category term="Golang" scheme="http://www.junmajinlong.com/tags/Golang/"/>
    
  </entry>
  
  <entry>
    <title>MySQL系列文章</title>
    <link href="http://www.junmajinlong.com/mysql/index/"/>
    <id>http://www.junmajinlong.com/mysql/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:27:33.650Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-MySQL-MariaDB-语法和基础篇"><a href="#1-MySQL-MariaDB-语法和基础篇" class="headerlink" title="1.MySQL/MariaDB 语法和基础篇"></a>1.MySQL/MariaDB 语法和基础篇</h1><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7592501.html" target="_blank" rel="noopener">MySQL 基本语法：和 SQL Server 语法的差异小归纳</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/7729251.html" target="_blank" rel="noopener">数据类型详解和存储机制</a> (精)<br><a href="http://www.cnblogs.com/f-ck-need-u/p/7740235.html" target="_blank" rel="noopener">内置函数大全</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8695767.html" target="_blank" rel="noopener">变量</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8907617.html" target="_blank" rel="noopener">DML(1)：数据插入</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8912026.html" target="_blank" rel="noopener">DML(2)：数据更新、删除</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8945248.html" target="_blank" rel="noopener">开窗函数用法说明</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8710324.html" target="_blank" rel="noopener">存储过程和函数</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8722244.html" target="_blank" rel="noopener">游标</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8724063.html" target="_blank" rel="noopener">流程控制语句</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8870446.html" target="_blank" rel="noopener">触发器</a><br>表表达式 (1)：派生表 (待补充)<br><a href="http://www.cnblogs.com/f-ck-need-u/p/8875863.html" target="_blank" rel="noopener">表表达式 (2)：CTE(公用表表达式)</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8870908.html" target="_blank" rel="noopener">表表达式 (3)：视图</a>  </p><h2 id="杂项"><a href="#杂项" class="headerlink" title="杂项"></a>杂项</h2><p><a href="http://www.cnblogs.com/f-ck-need-u/p/8656828.html" target="_blank" rel="noopener">SQL 语句逻辑执行过程 (MSSQL/MYSQL/MariaDB)</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8656828.html" target="_blank" rel="noopener">从关系模型和集合的角度分析 SQL 相关语法 (适用于 MSSQL/MYSQL/MariaDB)</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8718662.html" target="_blank" rel="noopener">从集合的无序性看待关系型数据库中的 “序”(适用于 MSSQL/MYSQL/MariaDB)</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8907252.html" target="_blank" rel="noopener">MyISAM 存储引擎读、写操作的优先级</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9098664.html" target="_blank" rel="noopener">Can’t connect to local MySQL server through socket</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9221317.html" target="_blank" rel="noopener">You must reset your password using ALTER USER statement before executing this statement.</a>  </p><p>更多文章待续…</p><h1 id="2-MySQL-MariaDB-管理篇"><a href="#2-MySQL-MariaDB-管理篇" class="headerlink" title="2.MySQL/MariaDB 管理篇"></a>2.MySQL/MariaDB 管理篇</h1><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7590376.html" target="_blank" rel="noopener">MySQL、MariaDB 安装和多实例配置</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8994220.html" target="_blank" rel="noopener">用户和权限管理</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8995475.html" target="_blank" rel="noopener">锁</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/8997814.html" target="_blank" rel="noopener">事务和事务隔离级别</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/9001061.html" target="_blank" rel="noopener">日志 (一)</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/9010872.html" target="_blank" rel="noopener">日志 (二)：事务日志 (redo log 和 undo log)</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/9013458.html" target="_blank" rel="noopener">备份和恢复 (一)：mysqldump 工具用法详述</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/9013643.html" target="_blank" rel="noopener">备份和恢复 (二)：导入、导出表数据</a><br><a href="http://www.cnblogs.com/f-ck-need-u/p/9018716.html" target="_blank" rel="noopener">备份和恢复 (三)：xtrabackup 用法和原理详述</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9155003.html" target="_blank" rel="noopener">MySQL 复制 (一)：复制理论和传统复制的配置</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9164823.html" target="_blank" rel="noopener">MySQL 复制 (二)：基于 GTID 复制</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9166452.html" target="_blank" rel="noopener">MySQL 复制 (三)：半同步复制</a>  </p><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9279703.html" target="_blank" rel="noopener">数据库性能测试：sysbench 用法详解</a></p><p><a href="http://www.cnblogs.com/f-ck-need-u/p/7742153.html" target="_blank" rel="noopener">show processlist 说明</a></p><p>更多文章待续…</p><h1 id="3-MySQL-集群"><a href="#3-MySQL-集群" class="headerlink" title="3.MySQL 集群"></a>3.MySQL 集群</h1><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9278900.html" target="_blank" rel="noopener">MySQL 集群结构说明</a> (必看)<br><a href="https://www.cnblogs.com/f-ck-need-u/p/9388407.html" target="_blank" rel="noopener">sharding：谁都能读懂的分库、分表、分区</a>  </p><h2 id="3-1-MySQL-高可用：组复制、Galera"><a href="#3-1-MySQL-高可用：组复制、Galera" class="headerlink" title="3.1 MySQL 高可用：组复制、Galera"></a>3.1 MySQL 高可用：组复制、Galera</h2><p><a href="https://files.cnblogs.com/files/f-ck-need-u/MySQL_GR.rar" target="_blank" rel="noopener">MySQL 组复制官方手册翻译. rar(下载)</a></p><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9216828.html" target="_blank" rel="noopener">1.MySQL 高可用之组复制 (1)：组复制技术简介</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9203154.html" target="_blank" rel="noopener">2.MySQL 高可用之组复制 (2)：配置单主模型的组复制</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9215013.html" target="_blank" rel="noopener">3.MySQL 高可用之组复制 (3)：配置多主模型的组复制</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9225442.html" target="_blank" rel="noopener">4.MySQL 高可用之组复制 (4)：组复制理论透彻分析</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9197442.html" target="_blank" rel="noopener">5. 翻译：MySQL 组复制的限制和局限性</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9204774.html" target="_blank" rel="noopener">6. 翻译：监控 MySQL 组复制</a></p><p>MGR 文章推荐: <a href="https://sq.163yun.com/blog/article/223220453915172864" target="_blank" rel="noopener">https://sq.163yun.com/blog/article/223220453915172864</a></p><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9364877.html" target="_blank" rel="noopener">1.PXC 快速入门：搭建 PXC</a>  </p><h2 id="3-2-MySQL-中间件：ProxySQL"><a href="#3-2-MySQL-中间件：ProxySQL" class="headerlink" title="3.2 MySQL 中间件：ProxySQL"></a>3.2 MySQL 中间件：ProxySQL</h2><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9276639.html" target="_blank" rel="noopener">中间件入门：MySQL Router 实现 MySQL 的读写分离</a></p><p><a href="https://files.cnblogs.com/files/f-ck-need-u/ProxySQL_cn.rar" target="_blank" rel="noopener">ProxySQL 中文手册 (官方文档翻译).rar(下载)</a></p><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9278818.html" target="_blank" rel="noopener">1.ProxySQL(1)：简介和安装</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9278839.html" target="_blank" rel="noopener">2.ProxySQL(2)：初试读写分离</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9281199.html" target="_blank" rel="noopener">3.ProxySQL(3)：Admin 管理接口</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9280793.html" target="_blank" rel="noopener">4.ProxySQL(4)：多层配置系统</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9281909.html" target="_blank" rel="noopener">5.ProxySQL(5)：线程、线程池、连接池</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9286922.html" target="_blank" rel="noopener">6.ProxySQL(6)：管理后端节点</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9300829.html" target="_blank" rel="noopener">7.ProxySQL(7)：路由规则详述</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9309760.html" target="_blank" rel="noopener">8.ProxySQL(8)：SQL 语句的重写规则</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9314459.html" target="_blank" rel="noopener">9.ProxySQL(9)：查询缓存功能</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9318558.html" target="_blank" rel="noopener">10.ProxySQL(10)：读写分离方法论</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9350631.html" target="_blank" rel="noopener">11.ProxySQL(11)：链式规则 ( flagIN 和 flagOUT )</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9372447.html" target="_blank" rel="noopener">12.ProxySQL(12)：禁止多路路由</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9362822.html" target="_blank" rel="noopener">13.ProxySQL(13)：ProxySQL 集群</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9372382.html" target="_blank" rel="noopener">14.ProxySQL(14)：ProxySQL+PXC</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/9383126.html" target="_blank" rel="noopener">15.ProxySQL(15)：ProxySQL + 组复制</a><br>下面这篇待写<br><a href="https://www.cnblogs.com/f-ck-need-u/p/7586194.html" target="_blank" rel="noopener">16.ProxySQL(16)：ProxySQL 实现 sharding</a>  </p><h1 id="4-我的译作-39"><a href="#4-我的译作-39" class="headerlink" title="4. 我的译作 (39)"></a>4. 我的译作 (39)</h1><p><a href="https://files.cnblogs.com/files/f-ck-need-u/MySQL_GR.rar" target="_blank" rel="noopener">MySQL 组复制官方手册翻译</a><br><a href="https://github.com/malongshuai/proxysql/wiki" target="_blank" rel="noopener">ProxySQL 中文手册 (官方文档翻译)</a><br><a href="https://www.cnblogs.com/f-ck-need-u/p/10697909.html" target="_blank" rel="noopener">MariaDB 官方手册翻译集合</a></p><p>更多文章待续…</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-MySQL-MariaDB-语法和基础篇&quot;&gt;&lt;a href=&quot;#1-MySQL-MariaDB-语法和基础篇&quot; class=&quot;headerlink&quot; title=&quot;1.MySQL/MariaDB 语法和基础篇&quot;&gt;&lt;/a&gt;1.MySQL/MariaDB 语法和基
      
    
    </summary>
    
      <category term="MySQL" scheme="http://www.junmajinlong.com/categories/MySQL/"/>
    
    
      <category term="MySQL" scheme="http://www.junmajinlong.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>操作系统系列文章</title>
    <link href="http://www.junmajinlong.com/os/index/"/>
    <id>http://www.junmajinlong.com/os/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T16:50:07.606Z</updated>
    
    <content type="html"><![CDATA[<h1 id="1-OS书籍推荐"><a href="#1-OS书籍推荐" class="headerlink" title="1.OS书籍推荐"></a>1.OS书籍推荐</h1><p>入门推荐书籍1：<strong>《计算机的心智：操作系统之哲学原理》</strong>(建议看第一版)。要阅读这本书，除了几个概念(比较常见的是”中断”)，完全不需要任何基础(没错，不需要C和任何语言的知识)，看故事一样就可以将操作系统的进程、线程、内存、IO、多核全部有个了解。就像我原来在网站架构系列中推荐的《大型网站技术架构：核心原理与案例分析》一样，抛去操作系统的细节，站在高处看操作系统。当然，这本书只能浅层次、全面地了解操作系统，适合入门操作系统。</p><p>入门推荐书籍2：<strong>《Operating Systems: Three Easy Pieces》</strong>，总共50章，目前看了11章。如果说上面推荐的《计算机的心智》是看故事，那么这本书就是从知识点的角度去系统性地认识操作系统，但偏偏没有任何难度。本书2019年6月出了中文版《操作系统导论》，我没看过中文版，所以翻译质量不知。</p><h1 id="2-必备知识"><a href="#2-必备知识" class="headerlink" title="2.必备知识"></a>2.必备知识</h1><ul><li><a href="/os/cpu">1.总结关于CPU的一些基本知识</a>  </li></ul><h1 id="3-《Operating-Systems-Three-Easy-Pieces》读书笔记"><a href="#3-《Operating-Systems-Three-Easy-Pieces》读书笔记" class="headerlink" title="3.《Operating Systems: Three Easy Pieces》读书笔记"></a>3.《Operating Systems: Three Easy Pieces》读书笔记</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;1-OS书籍推荐&quot;&gt;&lt;a href=&quot;#1-OS书籍推荐&quot; class=&quot;headerlink&quot; title=&quot;1.OS书籍推荐&quot;&gt;&lt;/a&gt;1.OS书籍推荐&lt;/h1&gt;&lt;p&gt;入门推荐书籍1：&lt;strong&gt;《计算机的心智：操作系统之哲学原理》&lt;/strong&gt;(建议
      
    
    </summary>
    
      <category term="OS" scheme="http://www.junmajinlong.com/categories/OS/"/>
    
    
      <category term="OS" scheme="http://www.junmajinlong.com/tags/OS/"/>
    
  </entry>
  
  <entry>
    <title>Ruby系列文章</title>
    <link href="http://www.junmajinlong.com/ruby/index/"/>
    <id>http://www.junmajinlong.com/ruby/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:54:11.138Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="Ruby" scheme="http://www.junmajinlong.com/categories/Ruby/"/>
    
    
      <category term="Ruby" scheme="http://www.junmajinlong.com/tags/Ruby/"/>
    
  </entry>
  
  <entry>
    <title>我的翻译</title>
    <link href="http://www.junmajinlong.com/translations/index/"/>
    <id>http://www.junmajinlong.com/translations/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:24:25.895Z</updated>
    
    <content type="html"><![CDATA[<p># </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;# &lt;/p&gt;

      
    
    </summary>
    
      <category term="Translations" scheme="http://www.junmajinlong.com/categories/Translations/"/>
    
    
      <category term="Translations" scheme="http://www.junmajinlong.com/tags/Translations/"/>
    
  </entry>
  
  <entry>
    <title>Perl系列文章</title>
    <link href="http://www.junmajinlong.com/perl/index/"/>
    <id>http://www.junmajinlong.com/perl/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:51:55.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="0-Perl书籍推荐"><a href="#0-Perl书籍推荐" class="headerlink" title="0.Perl书籍推荐"></a>0.Perl书籍推荐</h1><p><a href="https://pan.baidu.com/s/1IcY9rA7hAz1wfczl0Lll2Q" target="_blank" rel="noopener"><strong>Perl书籍下载</strong></a>  密码：kkqx</p><p>下面是一些我学习Perl过程中读过完整的或部分章节的觉得好的书。</p><ul><li><strong>入门级别1</strong>：《Perl语言入门》即小骆驼  </li><li><strong>入门级别2</strong>：《Intermediate Perl》即羊驼  </li><li><strong>入门后复习</strong>：《beginning Perl》  </li><li><strong>系统性学习和进阶</strong>：《Pro Perl》（目前在读，是我整理、完善Perl的最佳书籍）  </li><li><strong>Perl编码技巧</strong>：《Perl高效编程》(英文版Effective Perl Programming)</li></ul><p>关于《精通perl》和《Perl语言编程》（即羊驼一家和大骆驼），虽然网上评价很高，但是觉得始终不适合，或者说不适合中国人。精通Perl是作者(brian d foy)以第一人称来描述他怎么理解Perl的，Perl语言编程是Larry Wall自己编写的书籍，也许他智商太高，书中很多地方的跳跃性都非常大。</p><p>然后是某个方向的书籍，比如http客户端《perl lwp》(看了一半，作者的写作方式非常友好)、数据库操作《Programming the Perl DBI》（有中文版）。</p><p>最后，是我的这些博客，它们是我阅读这些书籍的读书笔记，更多的是我测试和补充的内容，可以免去看英文版，也免去书中的一大堆废话，老外的书，你懂的。</p><h1 id="1-Perl语言入门"><a href="#1-Perl语言入门" class="headerlink" title="1.Perl语言入门"></a>1.Perl语言入门</h1><p>本部分是《Perl语言入门 第六版》(英文书名：Learning Perl)的学习笔记，这本书是Perl家族的”小羊驼”书籍。我个人学习这本书的感觉，如果有shell基础，perl入门挺容易的。</p><h2 id="入门基础"><a href="#入门基础" class="headerlink" title="入门基础"></a>入门基础</h2><table>    <tbody>        <tr>            <td>                <ul>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9512028.html" target="_blank" rel="noopener">1.Perl 语法的基本规则</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511844.html" target="_blank" rel="noopener">2.Perl 的数值和字符串</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511857.html" target="_blank" rel="noopener">3.Perl 的变量</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9536582.html" target="_blank" rel="noopener">4.Perl 中的自增、自减</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511867.html" target="_blank" rel="noopener">5.Perl 的比较操作符</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511878.html" target="_blank" rel="noopener">6.Perl 的流程控制语句</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511936.html" target="_blank" rel="noopener">7.Perl 的 undef 类型和                            defined() 函数</a></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511892.html" target="_blank" rel="noopener">8.Perl 读取输入                            &lt;STDIN&gt;、&lt;&gt; 和 chomp 函数</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511949.html" target="_blank" rel="noopener">9.Perl 的列表和数组</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9525098.html" target="_blank" rel="noopener">10.Perl 中的 hash 类型</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9511968.html" target="_blank" rel="noopener">11.Perl 的执行上下文</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9618292.html" target="_blank" rel="noopener">12.Perl 分片技术</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9557517.html" target="_blank" rel="noopener">13.Perl 的输出：print、say 和                            printf</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9512313.html" target="_blank" rel="noopener">14.Perl 的子程序</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9695536.html" target="_blank" rel="noopener">15.Perl 的 do 语句块结构</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9520707.html" target="_blank" rel="noopener">16.Perl 的 die 和 warn 函数</a><br></li>                </ul>            </td>            <td>                <ul>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9557041.html" target="_blank" rel="noopener">17.Perl 的命令行参数和 ARGV</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9568879.html" target="_blank" rel="noopener">18.Perl 的 IO 操作 (1)：文件句柄</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9570654.html" target="_blank" rel="noopener">19.Perl 的 IO 操作                            (2)：更多文件句柄模式</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9568468.html" target="_blank" rel="noopener">20.Perl 文件句柄相关的常见变量</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9589419.html" target="_blank" rel="noopener">21.Perl 文件测试操作和 stat 函数</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9609676.html" target="_blank" rel="noopener">22.Perl 文件名通配和文件查找</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9601928.html" target="_blank" rel="noopener">23.Perl 文件、目录常用操作</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9609349.html" target="_blank" rel="noopener">24.Perl 复制、移动、重命名文件 / 目录</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9611098.html" target="_blank" rel="noopener">25.Perl 的 time、localtime 和                            gmtime 函数</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9648439.html" target="_blank" rel="noopener">26.Perl 正则表达式超详细教程</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9655273.html" target="_blank" rel="noopener">27.Perl 处理数据 (一)：s                            替换、split 和                            join</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9655841.html" target="_blank" rel="noopener">28.Perl 处理数据 (二)：tr 和 y///</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9685581.html" target="_blank" rel="noopener">29.Perl 模块管理</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9685957.html" target="_blank" rel="noopener">30.Perl 使用模块和 @INC</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9691714.html" target="_blank" rel="noopener">31.Perl 和 OS 交互                            (一)：system、exec 和反引号</a><br></li>                    <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9693675.html" target="_blank" rel="noopener">32.Perl 和 OS 交互 (二)：fork</a><br></li>                </ul>            </td>        </tr>    </tbody></table><h2 id="其它基础"><a href="#其它基础" class="headerlink" title="其它基础"></a>其它基础</h2><ul><li><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9666341.html" target="_blank" rel="noopener">1.Perl函数：字符串相关函数</a>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs undefined">chomp, chop, chr, crypt, fc, hex, index, lc, <br>lcfirst, length, oct, ord, pack, q//, qq//, <br>reverse, rindex, sprintf, substr, tr///, <br>uc, ucfirst, y///<br></code></pre></td></tr></table></figure></li><li><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9678875.html" target="_blank" rel="noopener">2.Perl函数：列表相关函数</a>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs undefined">grep, join, map, qw//, reverse, sort, unpack<br></code></pre></td></tr></table></figure></li><li><p><a href="https://www.cnblogs.com/f-ck-need-u/p/9680347.html" target="_blank" rel="noopener">3.Perl函数：数组和hash相关函数</a>  </p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs undefined">数组：each, keys, pop, push, shift, splice, unshift, values<br>hash：delete, each, exists, keys, values<br></code></pre></td></tr></table></figure></li><li><p><a href="https://www.cnblogs.com/f-ck-need-u/p/10340230.html" target="_blank" rel="noopener">4.List::Util模块用法详解</a>   </p></li></ul><p><a name="blogperloneline"></a></p><h1 id="2-Perl一行式程序"><a href="#2-Perl一行式程序" class="headerlink" title="2.Perl一行式程序"></a>2.Perl一行式程序</h1><p>这部分分3部分，内容比较多，算得上是一本薄书了，所以专门加上了一个《序言》，让它看上去更像是书。</p><p>第一部分是针对没有Perl基础，但想用perl一行式命令的人，用于快速掌握学习perl一行式时所必须知道的Perl基础知识。</p><p>第二部分是perl的选项、特殊变量的收集，没有多少示例，只是它们详细的解释，专门用来做perl一行式的参考手册或者熟练后的速查手册。第一次学perl一行式的人不建议直接看这一篇文章，而是直接从后面的示例部分开始看，需要完整、详细说明的时候再回来看这篇文章中对应的内容。</p><p>第三部分是一大堆perl一行式的使用示例(分成了好几篇文章)，也是学习perl一行式的入口，前提是你已经具备了Perl基础知识。这些例子不一定都是实用的例子，只是为了抛砖引玉。这部分会针对用法来对选项、perl语句做不完整解释，如果想要知道完整的解释，看第二部分的文章。</p><p>示例部分主要来自于《Perl One-Liners》这本书，但我自己对内容进行了大量扩充，也进行了更多的解释。</p><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10217587.html" target="_blank" rel="noopener">1.序言：我为什么学Perl</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10217597.html" target="_blank" rel="noopener">2.Perl 0基础的人学习Perl一行式必知的Perl基础</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10219326.html" target="_blank" rel="noopener">3.perl选项、特殊变量参考手册</a></li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10219742.html" target="_blank" rel="noopener">4.Perl一行式：处理空白符号</a></li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10223704.html" target="_blank" rel="noopener">5.Perl一行式：处理行号和单词数</a></li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10240314.html" target="_blank" rel="noopener">6.Perl一行式：字段处理和计算</a></li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10243772.html" target="_blank" rel="noopener">7.Perl一行式：文本编解码、替换</a></li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10247059.html" target="_blank" rel="noopener">8.Perl一行式：选择输出、删除的行</a></li></ul><h1 id="3-Perl语言进阶"><a href="#3-Perl语言进阶" class="headerlink" title="3.Perl语言进阶"></a>3.Perl语言进阶</h1><p>本部分是《Intermediate Perl 2nd》的学习笔记，这本书是骆驼家族的”羊驼”书，用于Perl的基础进阶学习。部分内容来自《Beginning Perl》，这也是一本好书。</p><h2 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h2><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9708263.html" target="_blank" rel="noopener">1.Perl引用入门</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9710562.html" target="_blank" rel="noopener">2.Perl解除引用：从引用还原到数据对象</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9713851.html" target="_blank" rel="noopener">3.Perl检查引用类型</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9718238.html" target="_blank" rel="noopener">4.Perl匿名数组、hash和autovivification特性</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9721265.html" target="_blank" rel="noopener">5.Perl的浅拷贝和深度拷贝</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9719282.html" target="_blank" rel="noopener">6.Perl输出复杂数据结构：Data::Dumper,Data::Dump,Data::Printer</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9723368.html" target="_blank" rel="noopener">7.Perl数据序列化和持久化(入门)：Storable模块</a>    </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9733283.html" target="_blank" rel="noopener">8.Perl子程序引用和匿名子程序</a>    </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9735955.html" target="_blank" rel="noopener">9.一文搞懂：词法作用域、动态作用域、回调函数、闭包</a>    </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9738156.html" target="_blank" rel="noopener">10.Perl回调函数和闭包</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9740059.html" target="_blank" rel="noopener">11.Perl文件句柄引用</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9743199.html" target="_blank" rel="noopener">12.Perl正则表达式引用</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9744275.html" target="_blank" rel="noopener">13.排序变换思路：施瓦茨变换</a>  </li></ul><h2 id="包和模块"><a href="#包和模块" class="headerlink" title="包和模块"></a>包和模块</h2><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9770651.html" target="_blank" rel="noopener">1.Perl导入代码文件(eval、do、require)</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9779949.html" target="_blank" rel="noopener">2.Perl包和模块(内容来自beginning perl)</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9771806.html" target="_blank" rel="noopener">3.Perl包相关</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9780625.html" target="_blank" rel="noopener">4.Perl特殊代码块：BEGIN、CHECK、INIT、END和UNITCHECK</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9781455.html" target="_blank" rel="noopener">5.Perl：写POD文档</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9782737.html" target="_blank" rel="noopener">6.Perl构建和打包自己的模块</a>  </li></ul><h2 id="Perl面向对象"><a href="#Perl面向对象" class="headerlink" title="Perl面向对象"></a>Perl面向对象</h2><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9798757.html" target="_blank" rel="noopener">1.Perl面向对象(1)：从代码复用开始</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9811119.html" target="_blank" rel="noopener">2.Perl面向对象(2)：对象</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/9818016.html" target="_blank" rel="noopener">3.Perl面向对象(3)：解构——对象销毁</a>  </li></ul><p><strong>待续。。。</strong></p><h1 id="Perl进程、线程、IO"><a href="#Perl进程、线程、IO" class="headerlink" title="Perl进程、线程、IO"></a>Perl进程、线程、IO</h1><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10386248.html" target="_blank" rel="noopener">1.Perl信号处理</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10386933.html" target="_blank" rel="noopener">2.Perl多进程</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10389627.html" target="_blank" rel="noopener">3.Perl处理和收走子进程</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10508297.html" target="_blank" rel="noopener">4.Perl进程：僵尸进程和孤儿进程</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10400540.html" target="_blank" rel="noopener">5.Perl进程间通信</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10404275.html" target="_blank" rel="noopener">6.Perl SysV IPC</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10420910.html" target="_blank" rel="noopener">7.Perl线程(1)：解释器线程特性和线程管理</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10422445.html" target="_blank" rel="noopener">8.Perl线程(2)：数据共享和线程安全</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10422293.html" target="_blank" rel="noopener">9.Perl线程队列：Thread::Queue</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10422449.html" target="_blank" rel="noopener">10.Perl线程池</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10442177.html" target="_blank" rel="noopener">11.Perl IO：简介和常用IO模块</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10442188.html" target="_blank" rel="noopener">12.Perl IO：read()函数</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10446013.html" target="_blank" rel="noopener">13.Perl IO：随机读写文件</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10447881.html" target="_blank" rel="noopener">14.Perl IO：文件锁</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10450299.html" target="_blank" rel="noopener">15.Perl IO：IO重定向</a>  </li><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10459768.html" target="_blank" rel="noopener">16.Perl IO：操作系统层次的IO</a>  </li></ul><h1 id="网络编程"><a href="#网络编程" class="headerlink" title="网络编程"></a>网络编程</h1><ul><li><a href="https://www.cnblogs.com/f-ck-need-u/p/10486209.html" target="_blank" rel="noopener">Perl获取主机名、用户、组、网络信息</a>  </li></ul><h1 id="balabala"><a href="#balabala" class="headerlink" title="balabala"></a>balabala</h1><p><a href="https://www.cnblogs.com/f-ck-need-u/p/10791792.html" target="_blank" rel="noopener">Perl输出带颜色行号或普通输出行</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;0-Perl书籍推荐&quot;&gt;&lt;a href=&quot;#0-Perl书籍推荐&quot; class=&quot;headerlink&quot; title=&quot;0.Perl书籍推荐&quot;&gt;&lt;/a&gt;0.Perl书籍推荐&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://pan.baidu.com/s/1IcY9
      
    
    </summary>
    
      <category term="Perl" scheme="http://www.junmajinlong.com/categories/Perl/"/>
    
    
      <category term="Perl" scheme="http://www.junmajinlong.com/tags/Perl/"/>
    
  </entry>
  
  <entry>
    <title>Python系列文章</title>
    <link href="http://www.junmajinlong.com/python/index/"/>
    <id>http://www.junmajinlong.com/python/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:12:41.262Z</updated>
    
    <content type="html"><![CDATA[<p>前面带有<code>[]</code>符号的是<strong>待补充文章</strong>，有些可能在随后会跟着补上，有些可能有缘再补😄。</p><h1 id="Python-语法基础"><a href="#Python-语法基础" class="headerlink" title="Python 语法基础"></a>Python 语法基础</h1><p><strong>菜鸟一枚，错误在所难免，还望发现错误后能够提出</strong>。</p><table>    <tbody>        <tr>            <td>                <li><strong>基础数据类型</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10133506.html" target="_blank" rel="noopener">数值类型</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10124444.html" target="_blank" rel="noopener">布尔类型和逻辑运算</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10124559.html" target="_blank" rel="noopener">等值和大小比较</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10139321.html" target="_blank" rel="noopener">字符串</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9127699.html" target="_blank" rel="noopener">字符串 (string) 方法整理</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10139325.html" target="_blank" rel="noopener">字符串格式化输出</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10147485.html" target="_blank" rel="noopener">列表类型</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10159411.html" target="_blank" rel="noopener">元组类型</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10159432.html" target="_blank" rel="noopener">字典类型</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10159413.html" target="_blank" rel="noopener">集合类型</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10259772.html" target="_blank" rel="noopener">列表解析</a></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10139295.html" target="_blank" rel="noopener">可变对象和不可变对象的解释</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10144798.html" target="_blank" rel="noopener">序列操作</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10185965.html" target="_blank" rel="noopener">bytes 和 bytearray、编码和解码</a><br></li>                    </ul>                </li>                <li><strong>语法特性</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10126127.html" target="_blank" rel="noopener">语法风格</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10122962.html" target="_blank" rel="noopener">变量和变量赋值的几种形式</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10123145.html" target="_blank" rel="noopener">按引用赋值和深、浅拷贝</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10127188.html" target="_blank" rel="noopener">if 判断语句</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10129317.html" target="_blank" rel="noopener">while 和 for 循环用法</a><br></li>                    </ul>                </li>                <li><strong>函数</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9932901.html" target="_blank" rel="noopener">函数 (1)：函数基础</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10091920.html" target="_blank" rel="noopener">函数 (2)：多个返回值和丢弃返回值</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9925021.html" target="_blank" rel="noopener">函数 (3)：作用域详述</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9937828.html" target="_blank" rel="noopener">函数 (4)：函数参数详述</a></li>                        <li>[] <a href>函数 (5)：回调函数和闭包</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9937018.html" target="_blank" rel="noopener">函数 (6)：函数属性和 PyCodeObject</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10198013.html" target="_blank" rel="noopener">函数 (7)：partial() 用法说明</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10198247.html" target="_blank" rel="noopener">函数 (8)：函数装饰器</a><br></li>                    </ul>                </li>            </td>            <td>                <li><strong>解析、迭代和生成</strong>                    <ul>                        <a name="blogiterator"></a>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10259772.html" target="_blank" rel="noopener">迭代和解析 (1)：列表解析</a></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10259746.html" target="_blank" rel="noopener">迭代和解析 (2)：迭代初探</a></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10260776.html" target="_blank" rel="noopener">迭代和解析                                (3)：range、zip、map、filter 和 reduce 函数</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10263299.html" target="_blank" rel="noopener">迭代和解析 (4)：自定义迭代器</a></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10266226.html" target="_blank" rel="noopener">迭代和解析 (5)：搞懂生成器和 yield 机制</a><br></li>                    </ul>                </li>                <li><strong>模块和包</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9955485.html" target="_blank" rel="noopener">模块和包 (1)：模块导入细节</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9961372.html" target="_blank" rel="noopener">模块和包 (2)：包导入细节</a><br></li>                    </ul>                </li>                <li><strong>面向对象</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/9965110.html" target="_blank" rel="noopener">面向对象 (1)：从代码复用开始</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10091181.html" target="_blank" rel="noopener">面向对象 (2)：设置对象属性</a></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10094021.html" target="_blank" rel="noopener">面向对象 (3)：类和对象的名称空间</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10099735.html" target="_blank" rel="noopener">面向对象 (4)：编码细节和注意事项</a><br></li>                        <li>[] <a href>面向对象 (5)：运算符重载</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10276417.html" target="_blank" rel="noopener">面向对象 (6)：杂七杂八的知识点</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10087696.html" target="_blank" rel="noopener">dir() 和__dict__属性的区别</a><br></li>                    </ul>                </li>                <li><strong>其它面向对象的话题</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10193396.html" target="_blank" rel="noopener">管理属性 1：基础</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10188994.html" target="_blank" rel="noopener">管理属性 2：property</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10198020.html" target="_blank" rel="noopener">管理属性 3：理解描述符 descriptor</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10198247.html" target="_blank" rel="noopener">装饰器 1：函数装饰器</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10205168.html" target="_blank" rel="noopener">装饰器 2：类装饰器</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10204617.html" target="_blank" rel="noopener">装饰器 3：进阶</a><br></li>                        <li>[] <a href>元类</a><br></li>                    </ul>                </li>                <li><strong>异常和错误处理</strong>                    <ul>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10116936.html" target="_blank" rel="noopener">异常处理详解</a><br></li>                        <li><a href="https://www.cnblogs.com/f-ck-need-u/p/10111121.html" target="_blank" rel="noopener">上下文管理：with/as 和 contextlib                                使用说明</a><br></li>                    </ul>                </li>            </td>        </tr>    </tbody></table><h1 id="Python-编程基础"><a href="#Python-编程基础" class="headerlink" title="Python 编程基础"></a>Python 编程基础</h1><ol><li>[] python 操作文件</li><li>[] python 正则表达式</li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前面带有&lt;code&gt;[]&lt;/code&gt;符号的是&lt;strong&gt;待补充文章&lt;/strong&gt;，有些可能在随后会跟着补上，有些可能有缘再补😄。&lt;/p&gt;
&lt;h1 id=&quot;Python-语法基础&quot;&gt;&lt;a href=&quot;#Python-语法基础&quot; class=&quot;headerlink&quot;
      
    
    </summary>
    
      <category term="Python" scheme="http://www.junmajinlong.com/categories/Python/"/>
    
    
      <category term="Python" scheme="http://www.junmajinlong.com/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Shell系列文章</title>
    <link href="http://www.junmajinlong.com/shell/index/"/>
    <id>http://www.junmajinlong.com/shell/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:24:05.564Z</updated>
    
    <content type="html"><![CDATA[<p><a name="blogshell"></a><a name="blogshell1"></a></p><h1 id="1-Shell-脚本、bash-特性系列"><a href="#1-Shell-脚本、bash-特性系列" class="headerlink" title="1.Shell 脚本、bash 特性系列"></a>1.Shell 脚本、bash 特性系列</h1><p>我在学习 shell 和 bash 时，遇到了非常多的问题，网上的答案和总结总是不尽人意，于是下决心大致阅览了一遍 man bash，不仅总结出了不少结论，当遇到问题时也知道是哪类问题 (很多时候还真不知道)，哪里找答案，受益极大。所以个人建议，如有关于 shell 和 bash 方面的问题时，先从 man bash 中获取答案。</p><p>bash 最新英文手册：<a href="https://www.gnu.org/software/bash/manual/bashref.html" target="_blank" rel="noopener">手册</a><br>bash 4.0 中文手册：<a href="https://files.cnblogs.com/files/f-ck-need-u/Bash4.0%E5%8F%82%E8%80%83%E6%96%87%E6%A1%A3.pdf" target="_blank" rel="noopener">下载</a></p><p>该 bash 中文手册翻译的挺好，但有些地方遗漏了内容，某些地方也遗漏了单词，而且毕竟是 4.0 版，和正在使用的 man bash 有些地方不同 (不少地方)，因此有疑问时建议中英文对照。</p><p>强烈建议：<strong>子 shell 和执行环境的概念贯穿整个 shell，当予以最高程度的关注和重视。特别是在 shell 脚本出现 “意料之外” 又很难排查的问题时，极大可能是因为 shell 的环境问题。那些 shell 编程的书籍，只适合入门，学 shell 脚本的 “形”，不适合深入。如果有时间，建议有基础后阅读 man bash 来学 shell 的 “神”。</strong></p><table>    <tbody>        <tr>            <td>                <ul>                    <li>1.<a href="http://www.cnblogs.com/f-ck-need-u/p/5915048.html" target="_blank">SHELL 脚本                            -- 简介</a></li>                    <li>2.<a href="http://www.cnblogs.com/f-ck-need-u/p/5915076.html" target="_blank">SHELL 脚本                            --echo 和 printf 打印输出</a></li>                    <li>3.<a href="http://www.cnblogs.com/f-ck-need-u/p/5915106.html" target="_blank">Bash 特性                            -- 多命令逻辑执行顺序</a></li>                    <li>4.<a href="http://www.cnblogs.com/f-ck-need-u/p/7229381.html" target="_blank">Bash 特性                            -- 变量 (基础)</a></li>                    <li>5.<a href="http://www.cnblogs.com/f-ck-need-u/p/7417651.html" target="_blank">Bash 特性 -                            bash 环境配置流程</a> (精)</li>                    <li>6.<a href="http://www.cnblogs.com/f-ck-need-u/p/7231870.html" target="_blank">SHELL 脚本                            -- 数学运算和 bc 命令</a></li>                    <li>7.<a href="http://www.cnblogs.com/f-ck-need-u/p/7231832.html" target="_blank">SHELL 脚本                            --expr 命令全解</a> (精)</li>                    <li>8.<a href="http://www.cnblogs.com/f-ck-need-u/p/7325378.html" target="_blank">Bash 特性                            -- 管道和重定向基础</a></li>                    <li>9.<a href="http://www.cnblogs.com/f-ck-need-u/p/7326254.html" target="_blank">Bash 特性                            --shell 数组基础</a></li>                    <li>10.<a href="http://www.cnblogs.com/f-ck-need-u/p/7385133.html" target="_blank">Bash 特性                            -- 别名 alias(通过 alias 让 rm 更安全)</a>(精)</li>                    <li>11.<a href="http://www.cnblogs.com/f-ck-need-u/p/7401591.html" target="_blank">Bash 特性                            -- 命令替换和命令组合</a></li>                    <li>12.<a href="http://www.cnblogs.com/f-ck-need-u/p/7426371.html" target="_blank">Bash 特性                            --shell 解析命令行的过程以及 eval 命令</a> (精)</li>                    <li>13.<a href="http://www.cnblogs.com/f-ck-need-u/p/8454364.html" target="_blank">Bash 特性                            --$ 后加引号 ($"string" 和 $'string')</a></li>                    <li>14.<a href="http://www.cnblogs.com/f-ck-need-u/p/7454174.html" target="_blank">Bash 特性                            --trap 捕捉信号方法论</a> (精)</li>                    <li>15.<a href="http://www.cnblogs.com/f-ck-need-u/p/8727401.html" target="_blank">Bash 特性                            -- 彻底搞懂 shell 的高级 I/O 重定向</a> (精)</li>                </ul>            </td>            <td>                <ul>                    <li>16.<a href="http://www.cnblogs.com/f-ck-need-u/p/7402137.html" target="_blank">Bash 特性                            --IFS 简单说明</a></li>                    <li>17.<a href="http://www.cnblogs.com/f-ck-need-u/p/7402149.html" target="_blank">SHELL 脚本                            --read 命令</a></li>                    <li>18.<a href="http://www.cnblogs.com/f-ck-need-u/p/7427262.html" target="_blank">SHELL 脚本                            --date、sleep、usleep 命令</a></li>                    <li>19.<a href="http://www.cnblogs.com/f-ck-need-u/p/7427357.html" target="_blank">Bash 特性                            --test、[]、[[]] 命令</a></li>                    <li>20.<a href="http://www.cnblogs.com/f-ck-need-u/p/7429462.html" target="_blank">Bash 特性                            --shell 的编程结构体</a> (精)</li>                    <li>21.<a href="http://www.cnblogs.com/f-ck-need-u/p/7431578.html" target="_blank">Bash 特性                            --while 循环的陷阱</a></li>                    <li>22.<a href="http://www.cnblogs.com/f-ck-need-u/p/7521506.html" target="_blank">SHELL 脚本                            --tr 命令用法和特性全解</a></li>                    <li>23.<a href="http://www.cnblogs.com/f-ck-need-u/p/7521357.html.html" target="_blank">SHELL                            脚本 --cut 命令</a></li>                    <li>24.<a href="http://www.cnblogs.com/f-ck-need-u/p/7442886.html" target="_blank">SHELL 脚本                            -- 玩透 sort 命令</a> (精)</li>                    <li>25.<a href="http://www.cnblogs.com/f-ck-need-u/p/7439878.html" target="_blank">SHELL 脚本                            --sort 命令中文手册</a></li>                    <li>26.<a href="http://www.cnblogs.com/f-ck-need-u/p/7454597.html" target="_blank">SHELL 脚本                            --uniq 命令</a></li>                    <li>27.<a href="http://www.cnblogs.com/f-ck-need-u/p/7454621.html" target="_blank">SHELL 脚本                            --seq 命令</a></li>                    <li>28.<a href="http://www.cnblogs.com/f-ck-need-u/p/7518142.html" target="_blank">SHELL 脚本                            --functions 文件详细分析和说明</a> (精)</li>                    <li>29.<a href="http://www.cnblogs.com/f-ck-need-u/p/7524401.html" target="_blank">SHELL 脚本                            -- 如何写 SysV 服务管理脚本</a> (精)</li>                </ul>            </td>        </tr>        <tr>            <th colspan="2">子shell、bash内置命令特殊性、后台任务的本质三部曲</th>        </tr>        <tr>            <td colspan="2">                <ul>                    <li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/9183819.html" target="_blank">bash                            内置命令的特殊性，后台任务的 "本质"</a>(精)</li>                    <li>2. <a href="http://www.cnblogs.com/f-ck-need-u/p/7446194.html" target="_blank">什么时候进入子                            shell</a>(精)</li>                    <li>3.<a href="http://www.cnblogs.com/f-ck-need-u/p/8661501.html" target="_blank">shell                            脚本技巧：如何让 shell 脚本自杀 + bash 内置命令的特殊性</a> (精)</li>                </ul>            </td>        </tr>        <tr>            <th>find &amp; xargs &amp; grep &amp; awk</th>            <th>sed(pdf 版：<a href="http://down.51cto.com/data/2444639" target="_blank">玩透 sed：探究 sed 原理. pdf</a></th>        </tr>        <tr>            <td>                <ul>                    <li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/10704754.html" target="_blank">Linux                            find 常用用法示例 (精)</a></li>                    <li>2.<a href="https://www.cnblogs.com/f-ck-need-u/p/6995529.html" target="_blank">Linux                            find 运行机制详解 (精)</a></li>                    <li>3.<a href="https://www.cnblogs.com/f-ck-need-u/p/5925923.html" target="_blank">xargs                            原理剖析和用法详解 (精)</a></li>                    <li>4.<a href="https://www.cnblogs.com/f-ck-need-u/p/7462706.html" target="_blank">grep                            命令中文手册</a> (精)</li>                    <li>5.<a href="https://www.cnblogs.com/f-ck-need-u/p/7509812.html" target="_blank">awk                            知识点总结</a> (精)</li>                    <li>6. <a href="https://www.cnblogs.com/f-ck-need-u/p/9621130.html" target="_blank">基础正则表达式</a>                        (精)</li>                    <li>7.<a href="https://www.cnblogs.com/f-ck-need-u/p/9648439.html" target="_blank">Perl                            正则表达式超详细教程</a> (精)</li>                    <li>8.<a href="https://www.cnblogs.com/f-ck-need-u/p/7684762.html" target="_blank">pcre                            和正则表达式的误点</a></li>                </ul>            </td>            <td><a name="sed+awk"></a>                <ul>                    <li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/7499471.html" target="_blank">sed                            从入门到深入的使用心得</a></li>                    <li>2.<a href="https://www.cnblogs.com/f-ck-need-u/p/7488469.html" target="_blank">sed 修炼系列                            (一)：花拳绣腿之入门篇</a> (精)</li>                    <li>3.<a href="https://www.cnblogs.com/f-ck-need-u/p/7478188.html" target="_blank">sed 修炼系列                            (二)：武功心法 (info sed 翻译 + 注解)</a>(精)</li>                    <li>4.<a href="https://www.cnblogs.com/f-ck-need-u/p/7496916.html" target="_blank">sed 修炼系列                            (三)：sed 高级应用之窗口滑动技术</a> (精)</li>                    <li>5.<a href="https://www.cnblogs.com/f-ck-need-u/p/7499309.html" target="_blank">sed 修炼系列                            (四)：sed 中的疑难杂症</a> (精)</li>                    <li>6.<a href="https://www.cnblogs.com/f-ck-need-u/p/8506501.html" target="_blank">sed                            删除拼音的音调</a></li>                    <li>7.<a href="https://www.cnblogs.com/f-ck-need-u/p/8849371.html" target="_blank">sed 示例：从                            a 文件判断是否删除 b 文件中的行</a></li>                </ul>            </td>        </tr>        <tr>            <td colspan="2">                <p><strong>一些脚本示例和技巧：</strong></p>                <ul>                    <li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/8785561.html" target="_blank">shell                            脚本技巧：判断 ssh 远程命令是否执行结束</a></li>                    <li>2.<a href="https://www.cnblogs.com/f-ck-need-u/p/9746985.html" target="_blank">shell                            脚本技巧：mapfile 读取文件内容保存到数组中</a></li>                    <li>3.<a href="https://www.cnblogs.com/f-ck-need-u/p/9749882.html" target="_blank">shell                            脚本技巧：tee 的花式用法和 pee</a></li>                    <li>4.<a href="https://www.cnblogs.com/f-ck-need-u/p/9758075.html" target="_blank">shell                            脚本技巧：getopt 设计 shell 脚本选项</a> (精)</li>                    <li>-------------------------------------------------------</li>                    <li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/7426987.html" target="_blank">shell                            脚本示例：计算毫秒级、微秒级时间差</a></li>                    <li>2.<a href="https://www.cnblogs.com/f-ck-need-u/p/7430259.html" target="_blank">shell                            脚本示例：批量比较多个文件的内容是否相同</a></li>                    <li>3.<a href="https://www.cnblogs.com/f-ck-need-u/p/7542210.html" target="_blank">shell                            脚本示例：expect 实现 scp/ssh-copy-id 非交互</a></li>                    <li>4.<a href="https://www.cnblogs.com/f-ck-need-u/p/9987052.html" target="_blank">shell                            脚本示例：shell 脚本动画小工具 (shell 版和 perl 版)</a></li>                </ul>            </td>        </tr>    </tbody></table><p><a name="blogparallel"></a></p><h1 id="2-shell-高效率处理文本"><a href="#2-shell-高效率处理文本" class="headerlink" title="2.shell 高效率处理文本"></a>2.shell 高效率处理文本</h1><ul><li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/7454671.html" target="_blank" rel="noopener">dd、split 和 csplit 命令</a></li><li>2.<a href="https://www.cnblogs.com/f-ck-need-u/p/9752365.html" target="_blank" rel="noopener">shell 高效处理文本 (1)：xargs 并行处理</a> (精)</li><li>3.GNU Parallel 6666666666</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a name=&quot;blogshell&quot;&gt;&lt;/a&gt;&lt;a name=&quot;blogshell1&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-Shell-脚本、bash-特性系列&quot;&gt;&lt;a href=&quot;#1-Shell-脚本、bash-特性系列&quot; class=&quot;headerlink&quot; ti
      
    
    </summary>
    
      <category term="Shell" scheme="http://www.junmajinlong.com/categories/Shell/"/>
    
    
      <category term="Shell" scheme="http://www.junmajinlong.com/tags/Shell/"/>
    
  </entry>
  
  <entry>
    <title>Linux系列文章</title>
    <link href="http://www.junmajinlong.com/linux/index/"/>
    <id>http://www.junmajinlong.com/linux/index/</id>
    <published>2019-07-06T09:37:29.000Z</published>
    <updated>2019-07-06T17:22:00.925Z</updated>
    
    <content type="html"><![CDATA[<p><img src="/img/linux/linux_1.png" alt></p><h1 id="1-Linux-基础"><a href="#1-Linux-基础" class="headerlink" title="1.Linux 基础"></a>1.Linux 基础</h1><p>Linux 基础 pdf 版 v2：<a href="https://download.csdn.net/download/a905815661/10956023" target="_blank" rel="noopener">Linux 基础千锤百炼. pdf</a></p><table>    <tbody>        <tr>            <td>                <ul>                    <li>1. <a href="http://www.cnblogs.com/f-ck-need-u/p/6995195.html" target="_blank">文件类基础命令</a></li>                    <li>2.Linux 系统用户<ul>                            <li>2.1 <a href="http://www.cnblogs.com/f-ck-need-u/p/7011460.html" target="_blank">系统用户                                    / 组管理</a></li>                            <li>2.2 <a href="http://www.cnblogs.com/f-ck-need-u/p/7011669.html" target="_blank">su                                    和 sudo</a></li>                        </ul>                    </li>                    <li>3. <a href="http://www.cnblogs.com/f-ck-need-u/p/7011971.html" target="_blank">文件的权限管理</a></li>                    <li>4.<a href="http://www.cnblogs.com/f-ck-need-u/p/7016077.html" target="_blank">ext                            文件系统内部原理机制</a> (精)</li>                    <li>5. <a href="http://www.cnblogs.com/f-ck-need-u/p/7048971.html" target="_blank">管理文件系统</a></li>                    <li>6.<a href="http://www.cnblogs.com/f-ck-need-u/p/7049233.html" target="_blank">LVM</a></li>                </ul>            </td>            <td>                <ul>                    <li>7.<a href="http://www.cnblogs.com/f-ck-need-u/p/7049501.html" target="_blank">RAID</a></li>                    <li>8. <a href="http://www.cnblogs.com/f-ck-need-u/p/7049750.html" target="_blank">包管理</a></li>                    <li>9. <a href="http://www.cnblogs.com/f-ck-need-u/p/7058920.html" target="_blank">进程和信号</a>                        (精)</li>                    <li>10. <a href="http://www.cnblogs.com/f-ck-need-u/p/7059074.html" target="_blank">系统状态统计和查看</a></li>                    <li>11. <a href="http://www.cnblogs.com/f-ck-need-u/p/7059321.html" target="_blank">服务管理</a></li>                    <li>12. <a href="http://www.cnblogs.com/f-ck-need-u/p/7059418.html" target="_blank">定时任务</a></li>                    <li>13.<a href="http://www.cnblogs.com/f-ck-need-u/p/7074594.html" target="_blank">Linux                            的网络管理</a></li>                    <li>14.<a href="http://www.cnblogs.com/f-ck-need-u/p/7100336.html" target="_blank">Linux                            开机详细流程</a> (精)</li>                </ul>            </td>        </tr>    </tbody></table><p><a name="blogservice"></a></p><h1 id="2-Linux-基本服务"><a href="#2-Linux-基本服务" class="headerlink" title="2.Linux 基本服务"></a>2.Linux 基本服务</h1><table>    <tbody>        <tr>            <td>                <ul>                    <li>1. 第 1 章 ssh 命令和 SSH 服务<ul>                            <li>1.1 <a href="https://www.cnblogs.com/f-ck-need-u/p/7129122.html" target="_blank">ssh                                    命令和 SSH 服务详解</a> (精)</li>                            <li>1.2 <a href="https://www.cnblogs.com/f-ck-need-u/p/10484531.html" target="_blank">SSH                                    转发代理：ssh-agent 用法详解</a></li>                            <li>1.3 <a href="https://www.cnblogs.com/f-ck-need-u/p/10482832.html" target="_blank">SSH                                    隧道：端口转发功能详解</a></li>                        </ul>                    </li>                    <li>2. 第 2 章 rsync 完全手册<ul>                            <li>2.1 <a href="http://www.cnblogs.com/f-ck-need-u/p/7220009.html" target="_blank">rsync(一):                                    基础命令和用法</a> (精)</li>                            <li>2.2 <a href="http://www.cnblogs.com/f-ck-need-u/p/7220193.html" target="_blank">rsync(二):inotify+rsync                                    和 sersync</a>(精)</li>                            <li>2.3 <a href="http://www.cnblogs.com/f-ck-need-u/p/7226781.html" target="_blank">rsync(三):                                    算法原理和工作流程分析</a> (精)</li>                            <li>2.4 <a href="http://www.cnblogs.com/f-ck-need-u/p/7220753.html" target="_blank">rsync(四):                                    翻译：rsync 官方推荐技术报告</a> (精)</li>                            <li>2.5 <a href="http://www.cnblogs.com/f-ck-need-u/p/7221535.html" target="_blank">rsync(五):                                    翻译：rsync 工作机制 (How Rsync Works)</a>(精)</li>                            <li>2.6 <a href="http://www.cnblogs.com/f-ck-need-u/p/7221713.html" target="_blank">rsync(六):                                    翻译：man rsync(rsync 命令中文手册)</a>(精)</li>                        </ul>                    </li>                    <li>3. <a href="http://www.cnblogs.com/f-ck-need-u/p/7305755.html" target="_blank">第 3 章                            NFS 基本应用</a>                    </li>                </ul>            </td>            <td>                <ul>                    <li>4. <a href="http://www.cnblogs.com/f-ck-need-u/p/7324199.html" target="_blank">第 4 章                            DHCP 服务</a></li>                    <li>5. 第 5 章 无人值守批量安装 Linux 操作系统<ul>                            <li>5.1 <a href="http://www.cnblogs.com/f-ck-need-u/p/6442024.html" target="_blank">PXE+kickstart                                    无人值守安装 CentOS 6</a></li>                            <li>5.2 <a href="http://www.cnblogs.com/f-ck-need-u/p/7342022.html" target="_blank">kickstart                                    文件详解 (CentOS 6.6)</a></li>                            <li>5.3 <a href="http://www.cnblogs.com/f-ck-need-u/p/7342919.html" target="_blank">PXE+kickstart                                    无人值守安装 CentOS 7</a></li>                            <li>5.4 <a href="http://www.cnblogs.com/f-ck-need-u/p/7347883.html" target="_blank">cobbler                                    无人值守批量安装 Linux 系统</a></li>                        </ul>                    </li>                    <li>6. 第 6 章 数据包过滤和防火墙<ul>                            <li>6.1 <a href="http://www.cnblogs.com/f-ck-need-u/p/7347987.html" target="_blank">tcp_wrapper                                    过滤</a></li>                            <li>6.2 <a href="http://www.cnblogs.com/f-ck-need-u/p/7397146.html" target="_blank">防火墙和                                    iptables</a></li>                            <li>6.3 firewalld(待补充)</li>                        </ul>                    </li>                    <li>7. <a href="http://www.cnblogs.com/f-ck-need-u/p/7367503.html" target="_blank">第 7 章                            DNS &amp; bind 从基础到深入</a> (精)</li>                </ul>            </td>        </tr>    </tbody></table><p>(更多服务软件请移步<a href="http://www.cnblogs.com/f-ck-need-u/p/7576137.html" title="网站架构" target="_blank" rel="noopener">网站架构系列</a>)</p><p><a name="blogopenssl"></a></p><h1 id="3-openssl系列"><a href="#3-openssl系列" class="headerlink" title="3.openssl系列"></a>3.openssl系列</h1><table>    <tbody>        <tr>            <td>                <p><strong>原理和命令篇 (翻译整理 man 文档以及用法示例)</strong></p>                <ul>                    <li>1. <a href="http://www.cnblogs.com/f-ck-need-u/p/6089523.html" target="_blank">加密、签名和                            SSL 握手机制细节</a> (精)</li>                    <li>2.<a href="http://www.cnblogs.com/f-ck-need-u/p/6089703.html" target="_blank">openssl                            命令总指挥</a></li>                    <li>3.<a href="http://www.cnblogs.com/f-ck-need-u/p/6089730.html" target="_blank">openssl                            genrsa</a></li>                    <li>4.<a href="http://www.cnblogs.com/f-ck-need-u/p/6089790.html" target="_blank">openssl                            rsa 和 openssl pkey</a></li>                    <li>5.<a href="http://www.cnblogs.com/f-ck-need-u/p/6089821.html" target="_blank">openssl                            speed 和 openssl rand</a></li>                    <li>6.<a href="http://www.cnblogs.com/f-ck-need-u/p/6089869.html" target="_blank">openssl                            passwd</a></li>                    <li>7.<a href="http://www.cnblogs.com/f-ck-need-u/p/6090376.html" target="_blank">openssl                            dgst(生成和验证数字签名)</a></li>                    <li>8.<a href="http://www.cnblogs.com/f-ck-need-u/p/6090393.html" target="_blank">openssl                            rsautl 和 openssl pkeyutl(文件的非对称加密)</a></li>                    <li>9.<a href="http://www.cnblogs.com/f-ck-need-u/p/7111488.html" target="_blank">openssl                            enc(对称加密)</a></li>                    <li>10.<a href="http://www.cnblogs.com/f-ck-need-u/p/7103791.html" target="_blank">openssl                            dhparam</a></li>                </ul>            </td>            <td>                <p><strong>证书请求、颁发、CA 相关 (<a href="https://files.cnblogs.com/files/f-ck-need-u/openssl-cookbook.pdf" target="_blank">SSL 官方书籍</a></strong>)</p>                <ul>                    <li>11.<a href="http://www.cnblogs.com/f-ck-need-u/p/7113610.html" target="_blank">openssl                            req(生成证书请求和自建 CA)</a></li>                    <li>12.<a href="http://www.cnblogs.com/f-ck-need-u/p/6091027.html" target="_blank">openssl                            主配置文件 openssl.cnf 解析</a></li>                    <li>13.<a href="http://www.cnblogs.com/f-ck-need-u/p/7115871.html" target="_blank">openssl                            ca(签署和自建 CA)</a></li>                    <li>14.<a href="http://www.cnblogs.com/f-ck-need-u/p/6090885.html" target="_blank">openssl                            x509(签署和自签署)</a></li>                    <li>15.<a href="http://www.cnblogs.com/f-ck-need-u/p/6091105.html" target="_blank">openssl                            签署和自签署证书的多种实现方式</a></li>                </ul>            </td>        </tr>    </tbody></table><h1 id="4-杂项内容"><a href="#4-杂项内容" class="headerlink" title="4.杂项内容"></a>4.杂项内容</h1><table>    <tbody>        <tr>            <td>                <ul>                    <li>1.<a href="https://www.cnblogs.com/f-ck-need-u/p/7008380.html" target="_blank">cpio                            用法详细说明</a></li>                    <li>3. <a href="https://www.cnblogs.com/f-ck-need-u/p/6413986.html" target="_blank">使用                            xmanager 接收图形界面</a></li>                    <li>5. <a href="https://www.cnblogs.com/f-ck-need-u/p/7064286.html" target="_blank">抓包工具                            tcpdump 用法说明</a></li>                    <li>7. <a href="https://www.cnblogs.com/f-ck-need-u/p/7064323.html" target="_blank">网络扫描工具                            nmap</a></li>                    <li>9.<a href="https://www.cnblogs.com/f-ck-need-u/p/7067006.html" target="_blank">Linux                            上磁盘热插拔</a></li>                    <li>11.<a href="https://www.cnblogs.com/f-ck-need-u/p/7099578.html" target="_blank">Linux                            终端类型</a></li>                    <li>13.<a href="https://www.cnblogs.com/f-ck-need-u/p/7429520.html" target="_blank">Linux                            录制、回放和共享终端操作</a></li>                    <li>15.<a href="https://www.cnblogs.com/f-ck-need-u/p/9583753.html" target="_blank">Linux                            终端会话实时共享 (kibitz)</a></li>                    <li>17. <a href="http://www.cnblogs.com/f-ck-need-u/p/8494992.html" target="_blank">为 Linux                            配置常用源：epel 和 IUS</a></li>                    <li>19.<a href="http://www.cnblogs.com/f-ck-need-u/p/8611558.html" target="_blank">CentOS 7                            主机名的弯弯绕绕</a></li>                    <li>21. <a href="http://www.cnblogs.com/f-ck-need-u/p/8820633.html" target="_blank">绝对路径的表示方式为什么是                            "/usr" 而不是 "//usr"</a></li>                    <li>23. <a href="https://www.cnblogs.com/f-ck-need-u/p/10504962.html" target="_blank">快速生成大量随机大小的文件</a></li>                </ul>            </td>            <td>                <ul>                    <li>2.<a href="https://www.cnblogs.com/f-ck-need-u/p/7430264.html" target="_blank">Linux                            中文件 MD5 校验</a></li>                    <li>4.<a href="https://www.cnblogs.com/f-ck-need-u/p/7454694.html" target="_blank">Linux                            comm 命令求出文件的交集、差集</a></li>                    <li>6. <a href="https://www.cnblogs.com/f-ck-need-u/p/7545187.html" target="_blank">手动生成 /                            etc/shadow 文件中的密码</a></li>                    <li>8.<a href="https://www.cnblogs.com/f-ck-need-u/p/8452082.html" target="_blank">wget                            命令的几个常用选项和示例</a></li>                    <li>10.<a href="https://www.cnblogs.com/f-ck-need-u/p/8502563.html" target="_blank">Linux                            查询端口是否被占用的四种方法</a></li>                    <li>12.<a href="https://www.cnblogs.com/f-ck-need-u/p/8538664.html" target="_blank">yum                            安装新版 php 遇到的坑</a></li>                    <li>14. <a href="https://www.cnblogs.com/f-ck-need-u/p/8659301.html" target="_blank">详细分析                            du 和 df 的统计结果为什么不一样</a></li>                    <li>16.<a href="https://files.cnblogs.com/files/f-ck-need-u/CentOS%E4%BD%BF%E7%94%A8shadowsocks-libev%E9%A3%9E%E8%B6%8A%E5%9F%8E%E9%97%A8.zip" target="_blank">CentOS 使用 shadowsocks-libev 飞越城门</a></li>                    <li>18.<a href="https://www.cnblogs.com/f-ck-need-u/p/9104950.html" target="_blank">sshfs                            基于 ssh 挂载远程目录</a></li>                    <li>20.<a href="http://www.cnblogs.com/f-ck-need-u/p/9071033.html" target="_blank">Linux                            下快速比较两个目录的不同</a></li>                    <li>22. <a href="https://www.cnblogs.com/f-ck-need-u/p/10430642.html" target="_blank">搞懂                            Linux 下的几种文件类型</a></li>                    <li>24.<a href="https://www.cnblogs.com/f-ck-need-u/p/11062591.html" target="_blank">shell                            生成指定长度的随机数</a></li>                </ul>            </td>        </tr>    </tbody></table><p><a name="mytranslations"></a></p><h1 id="5-我的个人翻译"><a href="#5-我的个人翻译" class="headerlink" title="5.我的个人翻译"></a>5.我的个人翻译</h1><p>网上没有、或不满意，我自己翻译。虽然耗时耗力，但收获斐然。</p><table>    <tbody>        <tr>            <td>                <ul>                    <li>1. <a href="https://www.cnblogs.com/f-ck-need-u/p/7094693.html" target="_blank">翻译：grub2 详解                            (翻译和整理官方手册)</a></li>                    <li>2. <a href="https://www.cnblogs.com/f-ck-need-u/p/7084627.html" target="_blank">翻译：Bios boot                            partition</a></li>                    <li>3. <a href="https://www.cnblogs.com/f-ck-need-u/p/7120669.html" target="_blank">翻译：man ssh(ssh                            命令中文手册)</a></li>                    <li>4. <a href="https://www.cnblogs.com/f-ck-need-u/p/7220753.html" target="_blank">翻译：rsync                            官方推荐技术报告</a></li>                    <li>5. <a href="https://www.cnblogs.com/f-ck-need-u/p/7221535.html" target="_blank">翻译：rsync 工作机制                            (How Rsync Works)</a></li>                    <li>6. <a href="https://www.cnblogs.com/f-ck-need-u/p/7221713.html" target="_blank">翻译：man                            rsync(rsync 命令中文手册)</a></li>                    <li>7. <a href="https://www.cnblogs.com/f-ck-need-u/p/7439878.html" target="_blank">翻译：info                            sort(sort 命令中文手册)</a></li>                    <li>8. <a href="https://www.cnblogs.com/f-ck-need-u/p/7462706.html" target="_blank">翻译：info                            grep(grep 命令中文手册)</a></li>                    <li>9. <a href="https://www.cnblogs.com/f-ck-need-u/p/7478188.html" target="_blank">翻译：info sed(sed                            命令中文手册 + 注解)</a></li>                </ul>            </td>            <td>                <ul>                    <li>10. <a href="https://www.cnblogs.com/f-ck-need-u/p/7302577.html" target="_blank">翻译：man                            rpcbind(rpcbind 中文手册)</a></li>                    <li>11. <a href="https://www.cnblogs.com/f-ck-need-u/p/7302580.html" target="_blank">翻译：man                            nfsd(rpc.nfsd 中文手册)</a></li>                    <li>12. <a href="https://www.cnblogs.com/f-ck-need-u/p/7302585.html" target="_blank">翻译：man                            mountd(rpc.mountd 中文手册)</a></li>                    <li>13. <a href="https://www.cnblogs.com/f-ck-need-u/p/7302593.html" target="_blank">翻译：man                            statd(rpc.statd 中文手册)</a></li>                    <li>14. <a href="https://www.cnblogs.com/f-ck-need-u/p/7302598.html" target="_blank">翻译：man                            sm-notify(sm-notify 命令中文手册)</a></li>                    <li>15. <a href="https://www.cnblogs.com/f-ck-need-u/p/7302589.html" target="_blank">翻译：man                            exportfs(exportfs 命令中文手册)</a></li>                    <li>16. <a href="https://www.cnblogs.com/f-ck-need-u/p/9757959.html" target="_blank">翻译：man                            getopt(1) 中文手册</a></li>                </ul>            </td>        </tr>    </tbody></table>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;/img/linux/linux_1.png&quot; alt&gt;&lt;/p&gt;
&lt;h1 id=&quot;1-Linux-基础&quot;&gt;&lt;a href=&quot;#1-Linux-基础&quot; class=&quot;headerlink&quot; title=&quot;1.Linux 基础&quot;&gt;&lt;/a&gt;1.Linux 基础
      
    
    </summary>
    
      <category term="Linux" scheme="http://www.junmajinlong.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://www.junmajinlong.com/tags/Linux/"/>
    
  </entry>
  
</feed>
